/*
 * (C) Copyright IBM Corp. 2023.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */
package com.ibm.cloud.eventnotifications.event_notifications.v1.model;

import java.util.List;

import com.google.gson.annotations.SerializedName;
import com.ibm.cloud.sdk.core.service.model.GenericModel;

/**
 * Topic object.
 */
public class Topic extends GenericModel {

  protected String id;
  protected String description;
  protected String name;
  @SerializedName("updated_at")
  protected String updatedAt;
  @SerializedName("source_count")
  protected Long sourceCount;
  protected List<SourcesListItems> sources;
  @SerializedName("subscription_count")
  protected Long subscriptionCount;
  protected List<SubscriptionListItem> subscriptions;

  protected Topic() { }

  /**
   * Gets the id.
   *
   * Autogenerated topic ID.
   *
   * @return the id
   */
  public String getId() {
    return id;
  }

  /**
   * Gets the description.
   *
   * Description of the topic.
   *
   * @return the description
   */
  public String getDescription() {
    return description;
  }

  /**
   * Gets the name.
   *
   * Name of the topic.
   *
   * @return the name
   */
  public String getName() {
    return name;
  }

  /**
   * Gets the updatedAt.
   *
   * Last time the topic was updated.
   *
   * @return the updatedAt
   */
  public String getUpdatedAt() {
    return updatedAt;
  }

  /**
   * Gets the sourceCount.
   *
   * Number of sources.
   *
   * @return the sourceCount
   */
  public Long getSourceCount() {
    return sourceCount;
  }

  /**
   * Gets the sources.
   *
   * List of sources.
   *
   * @return the sources
   */
  public List<SourcesListItems> getSources() {
    return sources;
  }

  /**
   * Gets the subscriptionCount.
   *
   * Number of subscriptions.
   *
   * @return the subscriptionCount
   */
  public Long getSubscriptionCount() {
    return subscriptionCount;
  }

  /**
   * Gets the subscriptions.
   *
   * List of subscriptions.
   *
   * @return the subscriptions
   */
  public List<SubscriptionListItem> getSubscriptions() {
    return subscriptions;
  }
}

